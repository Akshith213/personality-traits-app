name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test # Ensure you have tests defined in your package.json

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Determine new version
      id: new_version
      run: |
        # Fetch the latest tag from Docker Hub
        latest_tag=$(curl -s https://registry.hub.docker.com/v1/repositories/akshith213/personality-traits-app/tags | jq -r '.[].name' | grep -E '^v[0-9]+\.[0-9]+$' | sort -V | tail -n 1)
        echo "Latest tag: $latest_tag"

        # Extract major and minor version numbers
        if [[ $latest_tag =~ ^v([0-9]+)\.([0-9]+)$ ]]; then
          major=${BASH_REMATCH[1]}
          minor=${BASH_REMATCH[2]}
        else
          major=1
          minor=0
        fi

        # Increment version number
        if [[ $minor -lt 9 ]]; then
          new_version="v${major}.$((minor+1))"
        else
          new_version="v$((major+1)).0"
        fi
        echo "New version: $new_version"

        # Set output
        echo "::set-output name=version::$new_version"

    - name: Build and push multi-architecture Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: akshith213/personality-traits-app:${{ steps.new_version.outputs.version }}
        platforms: linux/amd64,linux/arm64

